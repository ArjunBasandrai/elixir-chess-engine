#pragma once

#include "board/board.h"

namespace elixir {
    constexpr inline EvalScore S(Score o_score, Score e_score) {
        return static_cast<EvalScore>((o_score << 16) | (e_score & 0xFFFF));
    }

    constexpr inline Score O(EvalScore score) {
        return static_cast<Score>(score >> 16);
    }

    constexpr inline Score E(EvalScore score) {
        return static_cast<Score>(score & 0xFFFF);
    }

    namespace eval {
        constexpr int piece_values[7] = {100, 300, 350, 500, 900, 20000, 0};
        constexpr EvalScore material_score[7] = {S(82, 94), S(337, 281), S(365, 297), S(477, 512), S(1025, 936), S(0, 0), S(0, 0)};
        constexpr EvalScore psqt[6][64] = {
            {
                S(  0,   0), S(  0,   0), S(  0,   0), S(  0,   0), S(  0,   0), S(  0,   0), S( 0,   0), S(  0,   0),
                S(134, 148), S(147, 146), S(108, 124), S(112, 107), S(113, 111), S(117, 117), S(47, 156), S( -8, 173),
                S(-14,  89), S(  5,  82), S( 27,  68), S( 42,  47), S( 51,  40), S( 44,  36), S(31,  69), S(-15,  70),
                S(-31,  32), S( -9,  21), S(-16,   8), S( -2,  -5), S(  3, -14), S( -9,  -6), S( 0,   9), S(-31,   8),
                S(-40,  12), S(-22,   7), S(-21,  -9), S(-10, -16), S( -8, -15), S(-15, -13), S(-1,  -5), S(-36,  -9),
                S(-38,   0), S(-23,   2), S(-26, -11), S(-28,  -3), S(-18,  -8), S(-19, -11), S(22, -12), S(-20, -16),
                S(-46,   9), S(-25,   7), S(-38,   0), S(-49,   2), S(-36,   5), S( -2,  -7), S(26,  -8), S(-32, -15),
                S(  0,   0), S(  0,   0), S(  0,   0), S(  0,   0), S(  0,   0), S(  0,   0), S( 0,   0), S(  0,   0)
            }, {
                S(-168, -60), S(-83, -50), S(-35, -24), S( -6, -42), S( 42, -44), S(-78, -41), S(-37, -72), S(-125,-113),
                S( -59, -35), S(-34, -11), S( 48, -33), S( 53, -16), S( 31, -23), S( 73, -46), S(  4, -43), S( -16, -51),
                S( -34, -30), S( 46, -29), S( 44,  -2), S( 59,  -7), S(104, -25), S(114, -25), S( 62, -28), S(  48, -53),
                S(   8, -30), S(  9,  -4), S( 29,   8), S( 42,   7), S( 29,   8), S( 58,  -2), S( 19,  -2), S(  33, -33),
                S(-13,  -34), S(  3, -17), S( 15,   3), S(  7,  10), S( 20,   4), S( 10,   5), S( 24, -14), S(   2, -38),
                S(-29,  -47), S( -4, -26), S( -1, -16), S( -1,  -1), S( 18,  -9), S(  8, -21), S( 12, -33), S( -24, -40),
                S(-39,  -56), S(-51, -34), S(-14, -35), S( -2, -25), S( 17, -19), S( -4, -52), S(-29, -41), S( -53, -78),
                S(-93,  -61), S(-28, -74), S(-60, -33), S(-37, -35), S(-23, -41), S( -4, -52), S(-29, -60), S( -54, -78)
            }, {
                S(-40,  -2), S( 33, -18), S(-45,   2), S( -5,  -5), S(-30,   4), S( -6,  -4), S(  7, -17), S(  3, -21),
                S( -9,  -1), S( 34,   7), S( 23,  13), S( 22,   0), S( 56,  -3), S( 61,  -9), S( 23,  -1), S(-18, -15),
                S(  6,   6), S( 39,   4), S( 54,   5), S( 66,   5), S( 61,   7), S(119,  -3), S( 68,   5), S( 44,  -1),
                S(  7,  -1), S( 26,  17), S( 56,   7), S( 62,  18), S( 52,  15), S( 68,   8), S( 29,  17), S( 19,   3),
                S( 30,  -9), S( 42,   2), S( 33,  19), S( 47,  19), S( 51,  10), S( 27,  15), S( 30,   0), S( 42, -14),
                S( 24,  -8), S( 43,  -2), S( 33,   9), S( 31,  15), S( 27,  17), S( 29,   6), S( 39,  -5), S( 23, -10),
                S( 42, -26), S( 28, -14), S( 33, -10), S( 16,   8), S( 22,   9), S( 35, -11), S( 39,  -6), S( 25, -35),
                S( -12,-26), S( 22, -16), S(  4, -28), S(  0,  -7), S( 15, -14), S(  1, -13), S(  3, -19), S( -5, -22)
            }, {
                S( 8,    4), S( 19,   4), S(32,    4), S(39,    7), S(51,    1), S(13,    7), S(23,    4), S(29,    0),
                S( 3,    9), S(  9,   9), S(32,    9), S(40,    6), S(40,    0), S(47,   -4), S(24,    2), S(34,   -1),
                S(-14,   7), S(  6,   7), S( 7,    8), S(27,    0), S(25,   -4), S(39,   -8), S(54,  -12), S(18,   -9),
                S(-42,   5), S(-21,   4), S( -6,   8), S(  5,  -1), S(  0,  -2), S( 10,  -4), S( -4,  -4), S(-20,   0),
                S(-45,  -6), S(-41,   2), S(-32,   5), S(-20,  -3), S(-17,  -9), S(-37,  -9), S( -2, -17), S(-37, -11),
                S(-62, -12), S(-41,  -8), S(-31, -14), S(-35,  -9), S(-23, -20), S(-21, -29), S(-17, -21), S(-39, -24),
                S(-64, -13), S(-40, -13), S(-38,  -7), S(-31, -11), S(-22, -20), S(-23, -23), S(-18, -22), S(-93,  -7),
                S(-34, -24), S(-26, -18), S(-23,  -6), S(-14, -11), S(-15, -19), S(-26, -21), S(-46, -10), S(-42, -34)
            }, {
                S(-18,  23), S( -1,   53), S( 19,  52), S( 37,  40), S( 58,  43), S( 68,  32), S( 68,  28), S( 34,  44),
                S(-22,  17), S(-32,   52), S(  5,  62), S(  5,  73), S(  5,  75), S( 68,  44), S( 21,  54), S( 51,  22),
                S( -5,  16), S( -13,  41), S( -2,  48), S( 18,  63), S( 40,  69), S( 80,  55), S( 63,  46), S( 42,  35),
                S(-10,   7), S( -15,  49), S( -8,  60), S( -3,  65), S( 17,  65), S( 19,  58), S( 15,  67), S( 16,  44),
                S( -7,   4), S(-15,   37), S( -9,  40), S( -3,  65), S(  2,  52), S( -1,  56), S( 11,  41), S(  9,  32),
                S(-7,  -14), S(  5,  -15), S( -5,  28), S( -6,  18), S( -5,  19), S(  9,  12), S( 13,  21), S( -1,  13),
                S(-33,   3), S(  1,   -9), S( 10, -26), S(  1,  -6), S(  2,  -6), S( 13, -22), S(-16,  -9), S(  2, -16),
                S(  9, -36), S( -8,  -27), S(-14,  -8), S(  6, -36), S(-11,  -6), S(-27, -28), S(-48,  -5), S(-50, -31)
            }, {
                S(-12, -57), S( 78, -24), S(106, -29), S( 49,  -3), S(  8,  14), S( 14,  26), S( 45,  23), S( 15, -14),
                S( 77,  -9), S( 30,  34), S( 21,  32), S( 68,  23), S( 18,  31), S( 19,  49), S( 11,  56), S(-40,  28),
                S( 43,  10), S( 29,  34), S( 16,  38), S( 17,  32), S(  8,  37), S( 50,  48), S( 41,  57), S( -6,  32),
                S( 11,   1), S(  9,  30), S( -2,  39), S(-15,  41), S(-18,  39), S(  9,  42), S( 13,  38), S(-51,  21),
                S(-38,  -4), S( 22,   2), S(  1,  25), S(-36,  34), S(-26,  34), S(-18,  30), S(-27,  21), S(-53,   2),
                S( 17, -23), S( 13,  -2), S(-16,  14), S(-33,  24), S(-34,  26), S(-29,  19), S(  0,   5), S(-32,  -3),
                S( 26, -29), S( -6,  -4), S(-18,   8), S(-65,  17), S(-45,  17), S(-19,   7), S( 14, - 6), S( 26, -24),
                S(-44, -38), S( 19, -28), S(  2, -12), S(-72,  -5), S(  4, -33), S(-46,  -5), S( 33, -30), S( 25, -52)
            }
        };
        Phase get_game_phase_score(Board &board, int &game_phase_score);
        EvalScore base_eval(Board& board);
        int evaluate(Board& board);
        Score interpolate_eval(EvalScore score, Board &board);
    }
}
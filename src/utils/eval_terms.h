#pragma once

#include "../evaluate.h"
#include "../types.h"

namespace elixir::eval {
        const EvalScore material_score[7] = {S(104, 130), S(311, 380), S(333, 371), S(499, 669), S(1100, 1215), S(0, 0), S(0, 0)};
        const EvalScore psqt[6][64] = {
            {
                S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), 
                S(49, 213), S(76, 205), S(55, 201), S(81, 146), S(73, 139), S(61, 157), S(-10, 210), S(-55, 219), 
                S(-31, 134), S(-7, 143), S(27, 108), S(26, 82), S(35, 70), S(66, 59), S(41, 109), S(-12, 103), 
                S(-41, 49), S(-11, 39), S(-8, 20), S(-2, 8), S(18, -1), S(12, 5), S(14, 22), S(-18, 20), 
                S(-52, 19), S(-20, 19), S(-17, 0), S(0, -6), S(2, -7), S(0, -3), S(0, 6), S(-37, -1), 
                S(-46, 11), S(-24, 16), S(-17, 0), S(-14, 8), S(2, 2), S(-3, 1), S(18, 3), S(-18, -8), 
                S(-45, 15), S(-18, 18), S(-26, 10), S(-21, 16), S(-8, 16), S(11, 6), S(32, 1), S(-25, -9), 
                S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0)
            }, 
            {
                S(-206, -73), S(-150, -26), S(-81, -10), S(-54, -17), S(0, -20), S(-95, -35), S(-135, -21), S(-134, -114), 
                S(-58, -28), S(-30, -7), S(25, -13), S(25, -7), S(24, -21), S(78, -34), S(-18, -18), S(0, -50), 
                S(-27, -14), S(17, -5), S(37, 17), S(53, 16), S(96, -4), S(103, -9), S(49, -19), S(10, -27), 
                S(-20, -2), S(-3, 13), S(21, 28), S(50, 29), S(25, 30), S(54, 23), S(6, 13), S(19, -14), 
                S(-34, -2), S(-18, 4), S(6, 28), S(9, 29), S(20, 32), S(14, 18), S(6, 3), S(-25, -9), 
                S(-53, -19), S(-28, -3), S(-5, 2), S(2, 21), S(16, 18), S(2, -1), S(-2, -10), S(-33, -19), 
                S(-58, -29), S(-48, -14), S(-30, -4), S(-10, -2), S(-10, -3), S(-10, -9), S(-28, -22), S(-29, -20), 
                S(-105, -38), S(-36, -38), S(-54, -17), S(-33, -12), S(-30, -12), S(-24, -23), S(-35, -34), S(-76, -43)
            }, 
            {
                S(-24, 16), S(-59, 24), S(-52, 18), S(-100, 33), S(-95, 29), S(-57, 17), S(-28, 11), S(-63, 16), 
                S(-25, 4), S(1, 11), S(-14, 16), S(-25, 16), S(3, 8), S(11, 5), S(-1, 17), S(4, -5), 
                S(-8, 27), S(16, 18), S(22, 20), S(31, 13), S(24, 16), S(56, 20), S(44, 13), S(31, 18), 
                S(-16, 22), S(-3, 29), S(15, 24), S(29, 37), S(24, 27), S(17, 26), S(1, 21), S(-8, 17), 
                S(-11, 13), S(-5, 25), S(0, 32), S(25, 28), S(21, 29), S(0, 27), S(-4, 20), S(-2, 5), 
                S(0, 15), S(8, 22), S(11, 25), S(8, 27), S(11, 30), S(14, 23), S(8, 17), S(14, 6), 
                S(5, 15), S(15, 7), S(17, 2), S(0, 19), S(11, 16), S(22, 9), S(34, 14), S(9, 0), 
                S(-5, 3), S(18, 15), S(4, 11), S(-5, 17), S(-2, 18), S(-8, 25), S(16, -1), S(2, -6)
            }, 
            {
                S(-1, 23), S(-16, 29), S(-14, 37), S(-13, 32), S(6, 24), S(37, 12), S(26, 13), S(41, 10), 
                S(-23, 24), S(-30, 38), S(-5, 38), S(19, 26), S(1, 27), S(36, 13), S(36, 8), S(65, -5), 
                S(-42, 24), S(-18, 24), S(-25, 26), S(-21, 22), S(11, 7), S(23, 2), S(77, -6), S(48, -10), 
                S(-52, 26), S(-39, 21), S(-40, 30), S(-33, 24), S(-31, 12), S(-15, 6), S(1, 2), S(0, -1), 
                S(-61, 19), S(-63, 22), S(-54, 23), S(-44, 21), S(-40, 16), S(-47, 14), S(-19, 0), S(-35, -1), 
                S(-60, 13), S(-56, 12), S(-45, 11), S(-38, 12), S(-30, 7), S(-29, 0), S(2, -20), S(-21, -17), 
                S(-59, 8), S(-49, 9), S(-31, 11), S(-29, 12), S(-22, 3), S(-17, -2), S(0, -13), S(-41, -4), 
                S(-35, 9), S(-33, 9), S(-19, 13), S(-10, 7), S(-6, 1), S(-12, 4), S(-8, -2), S(-27, -10)
            }, 
            {
                S(-20, 47), S(-39, 76), S(-10, 88), S(22, 76), S(29, 72), S(36, 73), S(65, 17), S(9, 63), 
                S(-5, 37), S(-26, 59), S(-27, 100), S(-41, 126), S(-34, 141), S(22, 97), S(7, 79), S(70, 49), 
                S(0, 34), S(-6, 47), S(-3, 76), S(3, 87), S(15, 107), S(62, 82), S(80, 44), S(78, 42), 
                S(-15, 44), S(-11, 56), S(-11, 67), S(-12, 89), S(-10, 106), S(3, 101), S(12, 91), S(23, 75), 
                S(-9, 42), S(-12, 62), S(-9, 60), S(-5, 87), S(-1, 77), S(0, 74), S(8, 69), S(13, 66), 
                S(-5, 27), S(3, 36), S(1, 55), S(4, 44), S(6, 55), S(13, 55), S(22, 46), S(15, 37), 
                S(2, 25), S(5, 27), S(15, 21), S(22, 23), S(20, 30), S(33, 0), S(36, -22), S(45, -37), 
                S(3, 23), S(3, 19), S(15, 15), S(24, 27), S(19, 15), S(2, 19), S(21, -5), S(15, -9)
            }, 
            {
                S(72, -102), S(45, -43), S(83, -35), S(-43, 7), S(4, -3), S(39, 0), S(68, -6), S(171, -98), 
                S(-61, -2), S(10, 26), S(-30, 35), S(47, 22), S(9, 39), S(27, 52), S(11, 51), S(-17, 19), 
                S(-77, 12), S(50, 32), S(-39, 53), S(-44, 59), S(-28, 62), S(52, 58), S(30, 58), S(-32, 30), 
                S(-57, 0), S(-69, 39), S(-76, 58), S(-125, 71), S(-126, 73), S(-89, 68), S(-81, 58), S(-122, 33), 
                S(-56, -11), S(-64, 24), S(-99, 52), S(-142, 70), S(-144, 71), S(-109, 58), S(-106, 43), S(-140, 25), 
                S(-26, -18), S(-8, 9), S(-75, 35), S(-92, 49), S(-89, 49), S(-83, 41), S(-36, 20), S(-54, 4), 
                S(63, -38), S(17, -6), S(-2, 9), S(-42, 22), S(-44, 25), S(-21, 16), S(31, -6), S(41, -26), 
                S(50, -74), S(90, -56), S(64, -34), S(-49, -10), S(21, -34), S(-17, -14), S(66, -47), S(63, -79)
            }
        };

        const EvalScore knight_mobility[9] = {S(29, -1), S(49, 0), S(59, 5), S(63, 2), S(67, 4), S(66, 10), S(64, 11), S(63, 12), S(65, 7)};
        const EvalScore bishop_mobility[14] = {S(9, -64), S(17, -41), S(26, -34), S(28, -23), S(36, -10), S(44, 3), S(49, 7), S(53, 15), S(55, 22), S(56, 21), S(61, 18), S(65, 17), S(66, 22), S(94, 4)};
        const EvalScore rook_mobility[15] = {S(-12, -24), S(-1, -8), S(2, -3), S(8, 0), S(8, 6), S(17, 8), S(21, 10), S(30, 13), S(35, 23), S(42, 26), S(48, 27), S(54, 29), S(55, 37), S(62, 41), S(64, 37)};
        const EvalScore queen_mobility[28] = {S(-70, -26), S(-68, -86), S(-72, -52), S(-69, -37), S(-66, -38), S(-62, -28), S(-57, -21), S(-59, 0), S(-57, 11), S(-54, 13), S(-53, 26), S(-53, 34), S(-52, 42), S(-50, 49), S(-48, 54), S(-47, 59), S(-44, 64), S(-47, 76), S(-42, 80), S(-40, 81), S(-33, 84), S(-28, 84), S(-26, 84), S(-14, 80), S(-1, 67), S(53, 49), S(65, 44), S(190, -15)};

        const EvalScore stacked_pawn_penalty = S(19, 40);
        const EvalScore bishop_pair_bonus = S(25, 69);

}
#pragma once

#include "../evaluate.h"
#include "../types.h"

namespace elixir::eval {
        const EvalScore material_score[7] = {S(95, 132), S(293, 395), S(325, 390), S(453, 706), S(984, 1303), S(0, 0), S(0, 0)};
        const EvalScore psqt[6][64] = {
            {
                S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), 
                S(52, 212), S(83, 201), S(56, 203), S(91, 143), S(73, 139), S(52, 154), S(-28, 207), S(-56, 222), 
                S(-28, 136), S(-10, 147), S(23, 108), S(29, 83), S(34, 71), S(58, 55), S(37, 109), S(-11, 105), 
                S(-40, 52), S(-12, 40), S(-11, 18), S(-5, 7), S(16, -3), S(5, 1), S(12, 22), S(-14, 22), 
                S(-49, 22), S(-19, 20), S(-17, 0), S(-1, -3), S(2, -6), S(-4, -5), S(-1, 8), S(-27, 0), 
                S(-45, 14), S(-24, 18), S(-21, -2), S(-15, 9), S(0, 2), S(-9, -1), S(14, 6), S(-14, -5), 
                S(-43, 18), S(-21, 21), S(-27, 5), S(-25, 18), S(-12, 19), S(6, 4), S(27, 4), S(-25, -4), 
                S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0)
            }, 
            {
                S(-188, -94), S(-165, -18), S(-92, -4), S(-55, -13), S(-15, -10), S(-79, -39), S(-137, -11), S(-132, -117), 
                S(-47, -27), S(-27, -4), S(5, -4), S(28, -5), S(7, -12), S(77, -29), S(-24, -10), S(2, -45), 
                S(-29, -11), S(14, -1), S(38, 17), S(49, 18), S(91, 1), S(95, -5), S(43, -13), S(7, -23), 
                S(-27, 1), S(-9, 16), S(19, 30), S(46, 31), S(23, 33), S(51, 28), S(4, 14), S(13, -8), 
                S(-41, 1), S(-22, 5), S(1, 31), S(5, 32), S(16, 34), S(8, 22), S(0, 8), S(-27, -7), 
                S(-60, -17), S(-34, -1), S(-13, 6), S(-3, 24), S(10, 20), S(-4, 0), S(-9, -7), S(-37, -15), 
                S(-68, -25), S(-55, -9), S(-39, -2), S(-18, 0), S(-18, 0), S(-16, -7), S(-36, -18), S(-38, -14), 
                S(-116, -34), S(-45, -38), S(-61, -16), S(-41, -12), S(-37, -10), S(-30, -22), S(-42, -31), S(-80, -48)
            }, 
            {
                S(-31, 21), S(-61, 30), S(-54, 24), S(-103, 39), S(-85, 31), S(-62, 19), S(-29, 13), S(-62, 17), 
                S(-21, 6), S(0, 16), S(-8, 18), S(-28, 20), S(3, 10), S(2, 8), S(-1, 20), S(-6, 2), 
                S(-8, 33), S(16, 21), S(11, 26), S(33, 13), S(18, 19), S(57, 22), S(37, 17), S(27, 25), 
                S(-13, 26), S(-2, 32), S(15, 26), S(28, 39), S(25, 31), S(18, 30), S(-1, 28), S(-12, 24), 
                S(-14, 18), S(-9, 30), S(-4, 35), S(22, 32), S(16, 31), S(-2, 30), S(-10, 26), S(0, 9), 
                S(-5, 22), S(3, 27), S(7, 29), S(4, 28), S(8, 33), S(9, 27), S(7, 21), S(11, 10), 
                S(1, 20), S(10, 14), S(13, 5), S(-4, 25), S(7, 20), S(19, 13), S(28, 20), S(7, 3), 
                S(-8, 10), S(14, 20), S(1, 16), S(-12, 22), S(-3, 23), S(-7, 29), S(14, 4), S(1, -3)
            }, 
            {
                S(-1, 22), S(-19, 32), S(-19, 43), S(-17, 37), S(2, 28), S(25, 20), S(22, 18), S(43, 13), 
                S(-22, 25), S(-26, 39), S(-4, 42), S(18, 30), S(3, 31), S(34, 17), S(28, 12), S(64, -3), 
                S(-43, 25), S(-19, 27), S(-23, 29), S(-20, 25), S(13, 11), S(18, 5), S(73, -4), S(46, -9), 
                S(-50, 28), S(-40, 25), S(-42, 35), S(-34, 29), S(-30, 13), S(-20, 7), S(-6, 4), S(-2, 0), 
                S(-62, 19), S(-64, 24), S(-53, 25), S(-44, 23), S(-42, 18), S(-52, 17), S(-25, 4), S(-36, 0), 
                S(-61, 15), S(-59, 14), S(-47, 13), S(-42, 16), S(-34, 10), S(-33, 0), S(-3, -18), S(-24, -17), 
                S(-61, 9), S(-52, 12), S(-33, 12), S(-32, 14), S(-26, 5), S(-22, -1), S(-6, -12), S(-39, -4), 
                S(-37, 9), S(-36, 10), S(-23, 15), S(-15, 9), S(-10, 3), S(-15, 5), S(-9, -4), S(-33, -5)
            }, 
            {
                S(-26, 52), S(-41, 77), S(-14, 95), S(21, 78), S(25, 77), S(29, 77), S(73, 14), S(14, 55), 
                S(-1, 31), S(-27, 65), S(-24, 103), S(-34, 123), S(-27, 143), S(16, 98), S(1, 80), S(55, 67), 
                S(3, 35), S(-3, 47), S(-10, 87), S(2, 95), S(12, 109), S(60, 89), S(72, 51), S(72, 51), 
                S(-14, 45), S(-10, 57), S(-11, 72), S(-12, 93), S(-10, 109), S(4, 101), S(12, 92), S(20, 80), 
                S(-8, 40), S(-14, 67), S(-13, 67), S(-3, 85), S(-3, 82), S(-4, 81), S(4, 74), S(12, 68), 
                S(-7, 31), S(0, 45), S(0, 55), S(-1, 52), S(2, 60), S(8, 59), S(18, 48), S(13, 39), 
                S(0, 25), S(1, 27), S(12, 23), S(18, 28), S(14, 35), S(27, 6), S(31, -19), S(46, -46), 
                S(0, 19), S(-1, 20), S(9, 18), S(18, 35), S(15, 16), S(0, 20), S(23, -8), S(12, -12)
            }, 
            {
                S(68, -112), S(48, -52), S(85, -40), S(-82, 17), S(-26, -2), S(29, -1), S(81, -10), S(197, -136), 
                S(-83, 0), S(-26, 33), S(-73, 48), S(51, 26), S(-16, 52), S(-10, 65), S(25, 53), S(0, 17), 
                S(-109, 18), S(20, 40), S(-59, 62), S(-79, 75), S(-36, 74), S(47, 66), S(20, 64), S(-23, 29), 
                S(-73, 6), S(-84, 47), S(-103, 69), S(-152, 83), S(-143, 83), S(-98, 76), S(-99, 66), S(-130, 35), 
                S(-70, -6), S(-77, 29), S(-113, 57), S(-148, 75), S(-149, 75), S(-103, 58), S(-109, 45), S(-137, 25), 
                S(-21, -18), S(-5, 9), S(-69, 34), S(-85, 48), S(-78, 47), S(-75, 37), S(-25, 15), S(-44, 0), 
                S(76, -42), S(29, -10), S(13, 3), S(-25, 16), S(-28, 20), S(-6, 8), S(46, -12), S(54, -33), 
                S(70, -84), S(104, -61), S(78, -38), S(-32, -17), S(36, -41), S(-3, -20), S(81, -52), S(78, -87)
            }
        };

        const EvalScore knight_mobility[9] = {S(23, 12), S(40, 9), S(47, 14), S(51, 9), S(55, 14), S(53, 20), S(51, 22), S(49, 23), S(52, 19)};
        const EvalScore bishop_mobility[14] = {S(3, -60), S(12, -37), S(21, -28), S(23, -16), S(31, -1), S(39, 13), S(46, 18), S(50, 25), S(50, 34), S(53, 32), S(56, 31), S(60, 31), S(59, 36), S(92, 17)};
        const EvalScore rook_mobility[15] = {S(-16, -16), S(-4, 0), S(0, 2), S(5, 5), S(5, 12), S(13, 14), S(17, 16), S(25, 18), S(29, 28), S(35, 31), S(41, 33), S(48, 35), S(48, 41), S(54, 47), S(57, 43)};
        const EvalScore queen_mobility[28] = {S(-69, -48), S(-69, -118), S(-78, -45), S(-75, -25), S(-72, -22), S(-69, -18), S(-64, -12), S(-66, 11), S(-63, 18), S(-61, 22), S(-60, 34), S(-60, 41), S(-59, 50), S(-58, 56), S(-56, 62), S(-56, 69), S(-53, 73), S(-56, 85), S(-52, 91), S(-50, 91), S(-38, 89), S(-35, 90), S(-34, 93), S(-28, 93), S(-2, 72), S(59, 49), S(54, 49), S(206, -16)};
}